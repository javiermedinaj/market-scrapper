name: Scrape and Store Historical Data

on:
  schedule:
    # Ejecutar una vez al dÃ­a a las 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch: 

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: |
          cd go-test
          go mod tidy
          go mod download

      - name: Run scrapers and save historical data
        run: |
          cd go-test
          # Debug: Mostrar el directorio actual y su contenido
          pwd
          ls -la
          
          # Asegurarnos de que el directorio data existe
          mkdir -p data/daily
          
          # Debug: Verificar la estructura del directorio data
          ls -la data/
          
          echo "Running Dia scraper..."
          cd dia
          go run dia_scraper.go
          cd ..
          
          echo "Running Jumbo scraper..."
          cd jumbo
          go run jumbo_scraper.go
          cd ..
          
          echo "Running Farmacity scraper..."
          cd farmacity
          go run main.go
          cd ..
          
          echo "Running FarmaOnline scraper..."
          cd farmaonline
          go run main.go
          cd ..
          
          echo "Running maintenance (compress old files)..."
          cd utils
          go run maintenance.go migrate_data.go historical_data.go
          cd ..
          
          echo "Verificando archivos creados..."
          ls -la data/daily/$(date +%Y-%m-%d)/ || echo "No se crearon archivos hoy"
          ls -la data/historical/ || echo "No hay archivos histÃ³ricos comprimidos"

      - name: Configurar token para autenticaciÃ³n
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Verificar cambios
        id: verify-changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push if there are changes
        if: steps.verify-changes.outputs.changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add go-test/data/daily/ go-test/data/historical/ go-test/data/*.json
          git commit -m "ðŸ“Š Update historical data - $(date +'%Y-%m-%d %H:%M:%S')"
          git push
